const Sequelize = require('sequelize');

const database = new Sequelize(process.env.DATABASE_URL);

const User = database.define('user', {
  id: {
    type: database.Sequelize.UUID,
    defaultValue: Sequelize.UUIDV1,
    allowNull: false,
    unique: true,
    primaryKey: true,
  },
  username: {
    type: database.Sequelize.STRING,
    allowNull: false,
    unique: true,
  },
  password: {
    type: database.Sequelize.STRING,
    allowNull: false,
  },
});

const Poll = database.define('poll', {
  id: {
    type: database.Sequelize.UUID,
    defaultValue: Sequelize.UUIDV1,
    allowNull: false,
    unique: true,
    primaryKey: true,
  },
  text: {
    type: database.Sequelize.STRING,
    allowNull: false,
  },
  userId: {
    type: database.Sequelize.UUID,
    allowNull: false,
  }
});

const PollOption = database.define('polloption', {
  id: {
    type: database.Sequelize.UUID,
    defaultValue: Sequelize.UUIDV1,
    allowNull: false,
    unique: true,
    primaryKey: true,
  },
  text: {
    type: database.Sequelize.STRING,
    allowNull: false,
  },
  count: {
    type: database.Sequelize.INTEGER,
    defaultValue: 0,
    allowNull: false,
  },
  pollId: {
    type: database.Sequelize.UUID,
    allowNull: false,
  }
});

// define relationships
Poll.belongsTo(User);
User.hasMany(Poll);
PollOption.belongsTo(Poll);
Poll.hasMany(PollOption);

const sync = () => database.sync({ force: true });

const seed = () => {
  const users = [
    { username: 'julian', password: 'password123', id: '64439c52-419d-4060-ae1d-1447fc815fb0'},
    { username: 'jeff', password: 'jeffy888', id: '786ae65e-b7a3-42a4-9f24-86f8536db5cc'},
  ];

  const polls = [
    { id: 'a5f3221f-5794-4049-a0aa-731c55f1cbf5', text: 'Which came first: the chicken or the egg?', userId: '64439c52-419d-4060-ae1d-1447fc815fb0' },
    { id: 'c59752b4-4823-4bd0-a960-4b1b418f7f5d', text: 'If a tree falls in a deserted forest, does it make a sound?', userId: '786ae65e-b7a3-42a4-9f24-86f8536db5cc' },
  ];

  //id will be generated by sequelize
  const polloptions = [
    { text: 'Chicken', pollId: 'a5f3221f-5794-4049-a0aa-731c55f1cbf5', count: 110 },
    { text: 'Egg', pollId: 'a5f3221f-5794-4049-a0aa-731c55f1cbf5', count: 78 },
    { text: 'Yes', pollId: 'c59752b4-4823-4bd0-a960-4b1b418f7f5d', count: 789 },
    { text: 'No', pollId: 'c59752b4-4823-4bd0-a960-4b1b418f7f5d', count: 145 },
  ];

  return sync()
    .then(() => {
      const seedUserData = users.map(user => User.create({
        id: user.id,
        username: user.username,
        password: user.password,
      }));
      return Promise.all(seedUserData)
        .then(() => {
          const seedPollData = polls.map(poll => Poll.create({
            id: poll.id,
            text: poll.text,
            option: poll.pollOption,
            userId: poll.userId,
          }));
          return Promise.all(seedPollData)
            .then(() => {
              const seedPollOptionData = polloptions.map(polloption => PollOption.create({
                text: polloption.text,
                count: polloption.count,
                pollId: polloption.pollId,
              }));
              return Promise.all(seedPollOptionData);
            });
        });
    });
};

module.exports = {
  models: {
    User,
    Poll,
    PollOption,
  },
  sync,
  seed,
};
